name: Build OnePlus 12 A14 Kernel
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Setup build kernel environment
      run: |
        sudo apt-get update
        sudo apt-get install git dwarves libelf-dev ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: Download kernel source
      run: |
        git clone https://github.com/OnePlusOSS/android_kernel_modules_and_devicetree_oneplus_sm8650 -b oneplus/sm8650_u_14.0.0_oneplus12 kernel_workspace --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace
        cd kernel_platform
        git clone https://github.com/OnePlusOSS/android_kernel_oneplus_sm8650 -b oneplus/sm8650_u_14.0.0_oneplus12 common --depth=1
        cd common/scripts
        sed -i 's/ -dirty//g' setlocalversion
        sed -i 's/ -g / -android14-11-g /g' setlocalversion

    - name: OnePlus 12 Kernel Patch
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir ./kernel_platform/common/drivers/soc/oplus
        ln -s '../../../../../vendor/oplus/kernel/boot' './kernel_platform/common/drivers/soc/oplus/boot'
        ln -s '../../../../../vendor/oplus/kernel/device_info/device_info' './kernel_platform/common/drivers/soc/oplus/device_info'
        ln -s '../../../../../vendor/oplus/kernel/dft' './kernel_platform/common/drivers/soc/oplus/dft'
        ln -s '../../../../../vendor/oplus/hardware/radio/kernel/mdmrst' './kernel_platform/common/drivers/soc/oplus/mdmrst'
        ln -s '../../../../../vendor/oplus/kernel/multimedia/feedback' './kernel_platform/common/drivers/soc/oplus/multimedia'
        ln -s '../../../../../vendor/oplus/kernel/storage/storage_feature_in_module' './kernel_platform/common/drivers/soc/oplus/storage'
        ln -s '../../../../../vendor/oplus/kernel/dfr' './kernel_platform/common/drivers/soc/oplus/dfr'
        ln -s '../../../../../vendor/oplus/kernel/hans' './kernel_platform/common/drivers/soc/oplus/hans'
        ln -s '../../../../../vendor/oplus/hardware/radio/kernel/mdmfeature' './kernel_platform/common/drivers/soc/oplus/mdmfeature'
        ln -s '../../../../../vendor/oplus/kernel/cpu/midas' './kernel_platform/common/drivers/soc/oplus/midas'
        ln -s '../../../../../vendor/oplus/sensor/kernel/oplus_consumer_ir' './kernel_platform/common/drivers/soc/oplus/oplus_consumer_ir'
        ln -s '../../../../../vendor/oplus/kernel/power' './kernel_platform/common/drivers/soc/oplus/power'
        ln -s '../../../../../vendor/oplus/sensor/kernel/qcom/sensor' './kernel_platform/common/drivers/soc/oplus/sensor'

    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r487747c.tar.gz -O clang-r487747c.tar.gz
        tar -C clang-aosp/ -zxvf clang-r487747c.tar.gz

    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/common
        rm -rf KernelSU drivers/kernelsu
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        KERNEL_DIR=./kernel_platform/common
        OUT_DIR=../../out
        DEFCONFIG="gki_defconfig vendor/pineapple_GKI.config"
        LTO=thin
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export ARCH=arm64
        export SUBARCH=arm64
        export HEADER_ARCH=arm64
        TOOL_ARGS+=("ARCH=${ARCH}" "SUBARCH=${SUBARCH}" "HEADER_ARCH=${HEADER_ARCH}")
        CC=clang CXX=clang++ && TOOL_ARGS+=("CC=${CC}"  "CXX=${CXX}")
        LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf OBJSIZE=llvm-size STRIP=llvm-strip && TOOL_ARGS+=("LD=${LD}" "AR=${AR}" "NM=${NM}" "OBJCOPY=${OBJCOPY}" "OBJDUMP=${OBJDUMP}" "STRIP=${STRIP}")
        LLVM=1 LLVM_IAS=1 && TOOL_ARGS+=("LLVM=${LLVM}" "LLVM_IAS=${LLVM_IAS}")
        cd ${KERNEL_DIR}
        THREAD=14
        make -j"$THREAD" "${TOOL_ARGS[@]}" O=${OUT_DIR}  ${DEFCONFIG}
        scripts/config --file ${OUT_DIR}/.config -e LTO_CLANG -d LTO_NONE -e LTO_CLANG_THIN -d LTO_CLANG_FULL -e THINLTO
        THREAD=$(($(nproc --all) - 1))
        make -j"$THREAD" O=${OUT_DIR} "${TOOL_ARGS[@]}"

    - name: Make Anykernel3
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1 AnyKernel3
        cp out/arch/arm64/boot/Image AnyKernel3/

    - name: Upload Image
      uses: actions/upload-artifact@v4
      with:
        name: Image
        path: kernel_workspace/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AK3-OP11-A14-KSU-$(TZ=Asia/Shanghai date +%y%m%d)
        path: kernel_workspace/AnyKernel3/*
